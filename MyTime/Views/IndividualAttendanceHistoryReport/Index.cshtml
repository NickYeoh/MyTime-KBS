@model MyTime.ViewModels.IndividualAttendanceHistoryReportViewModel

@{
    ViewBag.Title = MyTime.Resource.IndividualAttendanceHistoryReport;

    Layout = "~/Views/Shared/_Layout.cshtml";

}

<div class="container-fluid">

    <div class="row">
        <div class="col">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item" aria-current="page">@MyTime.Resource.Report</li>
                    <li class="breadcrumb-item active" aria-current="page">@ViewBag.Title</li>
                </ol>
            </nav>
        </div>
    </div>

    <div class="row">

        <div id="divList" class="col-md-12">

            <div class="card shadow">
                <div class="card-header bg-transparent text-center">

                    <div class="form-horizontal">

                        <div class="form-group row text-center">
                            <div class="col-md-12">
                                <h5> @ViewBag.Title</h5>
                            </div>
                        </div>

                        <hr />

                        <div class="form-group row text-left">

                            <div class="col-md-auto">
                                <div>
                                    @Html.Label(MyTime.Resource.Month, htmlAttributes: new { @class = "control-label required" })
                                </div>
                                <div>
                                    @Html.DropDownList("MonthYear", Model.SelectListMonthYear as List<SelectListItem>, MyTime.Resource.PleaseSelect, htmlAttributes: new { @style = "width:100px;", @class = "form-control", @id = "ddlMonthYear" })
                                </div>
                            </div>

                            <div class="col-md-auto">
                                <div>
                                    @Html.Label(MyTime.Resource.DepartmentName, htmlAttributes: new { @class = "control-label required" })
                                </div>

                                <div>
                                    @Html.DropDownList("Department", Model.SelectListDepartment as List<SelectListItem>, MyTime.Resource.PleaseSelect, htmlAttributes: new { @style = "width:300px;", @class = "form-control", @id = "ddlDepartment" })
                                </div>
                            </div>

                            <div class="col-md-auto">
                                <div>
                                    @Html.Label(MyTime.Resource.UserName, htmlAttributes: new { @class = "control-label required" })
                                </div>
                                <div class="row D-flex align-items-start pl-3">
                                    <div class="pb-2">
                                        <select id="ddlUser" class="form-control" style="width: 300px;"></select>
                                        @*@Html.DropDownList("User", Model.SelectListDepartment as List<SelectListItem>, MyTime.Resource.PleaseSelect, htmlAttributes: new { @style = "width:300px;", @class = "form-control", @id = "ddlUser" })*@
                                    </div>
                                    <div>
                                        <span class="pl-2"></span>
                                        <input id="btnGenerate" type="button" value="@MyTime.Resource.Generate" class="btn btn-primary text-center" style="min-width:80px;" />
                                        <span class="pl-1"></span>
                                        <input id="btnReset" type="button" value="@MyTime.Resource.Reset" class="btn btn-warning text-center" style="min-width: 80px;" />
                                        <span class="pl-1"></span>
                                        <input id="btnPrint" type="button" value="@MyTime.Resource.Print" class="btn btn-info text-black text-center" style="min-width: 80px;" onclick="location.href='@Url.Action("PrintAttendanceMonthlyReport", "IndividualAttendanceHistoryReport" )'" />
                                    </div>

                                </div>

                            </div>


                        </div>



                        <div class="form-group row">
                            <div class="col-md-12 d-flex justify-content-end">
                                @Html.Label(MyTime.Resource.TotalLateIn, htmlAttributes: new { @class = "control-label pr-1" })
                                <span class="badge badge-secondary" style="font-size:12pt;"> @Html.Label("0", htmlAttributes: new { @class = "control-label p-0 text-center", @id = "TotalLateIn" }) </span>

                                @Html.Label(MyTime.Resource.TotalEarlyOut, htmlAttributes: new { @class = "control-label pl-2 pr-1" })
                                <span class="badge badge-secondary" style="font-size:12pt;"> @Html.Label("0", htmlAttributes: new { @class = "control-label p-0", @id = "TotalEarlyOut" }) </span>

                                @Html.Label(MyTime.Resource.TotalLateInEarlyOut, htmlAttributes: new { @class = "control-label pl-2 pr-1" })
                                <span class="badge badge-secondary" style="font-size:12pt;"> @Html.Label("0", htmlAttributes: new { @class = "control-label p-0", @id = "TotalLateInEarlyOut" }) </span>

                                @Html.Label(MyTime.Resource.TotalIncomplete, htmlAttributes: new { @class = "control-label pl-2 pr-1" })
                                <span class="badge badge-secondary" style="font-size:12pt;"> @Html.Label("0", htmlAttributes: new { @class = "control-label p-0", @id = "TotalIncomplete" }) </span>

                                @Html.Label(MyTime.Resource.TotalAbsent, htmlAttributes: new { @class = "control-label pl-2 pr-1" })
                                <span class="badge badge-secondary" style="font-size:12pt;"> @Html.Label("0", htmlAttributes: new { @class = "control-label p-0", @id = "TotalAbsent" }) </span>

                            </div>
                        </div>

                        <div class="form-group row">

                            <div class="col-md-4 d-flex justify-content-start">

                                @Html.Label(@MyTime.Resource.AttendanceCardStatus + " : ", htmlAttributes: new { @class = "control-label p-0 text-center" })


                                <i id="iconAttendanceCardStatus" class='icofont-address-book pr-1' style='color: gold ; font-size: 30px; display:none;' data-toggle='tooltip' data-placement='top' title='@MyTime.Resource.AttendanceCard'></i>


                                @Html.Label("-", htmlAttributes: new { @class = "control-label pl-1 text-center", @id = "AttendanceCardStatus" })

                            </div>

                            <div class="col-md-8 d-flex justify-content-end">

                                @Html.Label(MyTime.Resource.TotalAttend, htmlAttributes: new { @class = "control-label pl-2 pr-1" })
                                <span class="badge badge-secondary" style="font-size:12pt;"> @Html.Label("0", htmlAttributes: new { @class = "control-label p-0", @id = "TotalAttend" }) </span>

                                @Html.Label(MyTime.Resource.TotalOnLeave, htmlAttributes: new { @class = "control-label pl-2 pr-1" })
                                <span class="badge badge-secondary" style="font-size:12pt;"> @Html.Label("0", htmlAttributes: new { @class = "control-label p-0", @id = "TotalOnLeave" }) </span>
                            </div>
                        </div>

                        <div class="form-group row">
                            <div class="col-md-12 d-flex justify-content-end">

                                <span class="fa fa-circle pl-2 pr-1" style="color:orange"> @MyTime.Resource.StatusSubmitted </span>
                                <span class="fa fa-check pl-2 pr-1" style="color:green"> @MyTime.Resource.StatusApproved </span>
                                <span class="fa fa-times pl-2 pr-1" style="color:red"> @MyTime.Resource.StatusRejected </span>
                                <span class="fa fa-circle pl-2 pr-1" style="color:indigo"> @MyTime.Resource.StatusRequestedToAmend </span>
                            </div>
                        </div>

                    </div>

                    <hr />

                    <div class="card-body pt-0">

                        <table id="listDatatable" class="table table-striped hover" style="table-layout: fixed;">
                            <thead>

                                <tr class="text-white header-bg-color">
                                    <th></th>
                                    <th></th>
                                    <th>@MyTime.Resource.Date</th>
                                    <th>@MyTime.Resource.Day</th>
                                    <th>@MyTime.Resource.ShiftID</th>
                                    <th>@MyTime.Resource.AttendanceStatusID</th>
                                    <th>@MyTime.Resource.AttendanceStatus</th>
                                    <th>@MyTime.Resource.FirstIn</th>
                                    <th>@MyTime.Resource.Lateness</th>
                                    <th>@MyTime.Resource.LastOut</th>
                                    <th>@MyTime.Resource.WorkTime</th>
                                    <th>@MyTime.Resource.Overtime</th>
                                    <th>@MyTime.Resource.SubmissionDueDate</th>
                                    <th></th>
                                    <th>@MyTime.Resource.Reason</th>
                                    <th></th>
                                    <th>@MyTime.Resource.AttendanceCardStatus</th>
                                </tr>
                            </thead>
                        </table>

                    </div>
                </div>
            </div>

        </div>

    
        <div id="divCRUD" class="col-md-6 hide">
        </div>


        <div class="modal fade" id="modalCRUD" role="dialog" data-backdrop="static" keyboard="false">
            <div class="modal-dialog">
                <div id="divCRUD">
                </div>
            </div>
        </div>

    </div>

    <input type=hidden id="pid" value="" />
</div>

@section styles
                                    {
    @Styles.Render("~/Content/dataTables")
    <link rel="stylesheet" href="~/Content/themes/base/jquery-ui.min.css">
}

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    @Scripts.Render("~/bundles/dataTables")
    <script src="~/Scripts/moment.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    @*@Scripts.Render("~/bundles/custom-js")*@

<script type="text/javascript">


        var customDatatable;
        var dataList;

        function convertToDate(data) {

                var dte = new Date(parseInt(data.substr(6)));
                var dteWrapper = moment(dte);
                return dteWrapper.format("DD/MM/YYYY");
        };

    $(document).ready(function () {

            //toggleSidebar();
            unloadSpinner();
            showDivBody();

            var ddlUser = $('#ddlUser');
            ddlUser.empty().append('<option selected="selected" value="">@MyTime.Resource.PleaseSelect</option>');

            $('#btnGenerate').prop('disabled', true);
            $('#btnReset').prop('disabled', true);
            $('#btnPrint').prop('disabled', true);

            $('#ddlMonthYear').change(function () {

                ValidateCriterion();

            });

            $('#ddlDepartment').change(function () {
                var ddlUser = $('#ddlUser');
                ddlUser.empty().append('<option selected="selected" value="">@MyTime.Resource.PleaseSelect</option>');
                ValidateCriterion();
            });

            $('#ddlUser').change(function () {

                var ddlUser;
                var selectedUser;

                ddlUser = document.getElementById('ddlUser');
                selectedUser = ddlUser.value;

                if (selectedUser != '') {

                    $('#btnGenerate').prop('disabled', false);
                    $('#btnReset').prop('disabled', true);
                    $('#btnPrint').prop('disabled', true);

                }
                else {

                    $('#btnGenerate').prop('disabled', true);
                    $('#btnReset').prop('disabled', true);
                    $('#btnPrint').prop('disabled', true);

                }

            });


            var culture = '@System.Globalization.CultureInfo.CurrentCulture.Name';

            var locale_norecord = '';
            var locale_lengthmenu = '';
            var locale_info = '';
            var locale_search = '';
            var locale_first = '';
            var locale_previous = '';
            var locale_next = '';
            var locale_last = '';
            var locale_infofiltered = '';

            if (culture != 'ms-MY') {
                //locale_norecord = '- No record -';
                locale_norecord = '-';
                locale_lengthmenu = 'Display _MENU_';
                //locale_info = 'Showing page _PAGE_ of _PAGES_';
                locale_info = 'Record# _START_~_END_  of _TOTAL_';
                locale_search = '';

                locale_infofiltered = '';

                locale_first = 'First';
                locale_previous = 'Previous';
                locale_next = 'Next';
                locale_last = 'Last';
            }
            else {
                //locale_norecord = '- Tidak ada rekod -';
                locale_norecord = '-';
                locale_lengthmenu = 'Paparan _MENU_ ';
                //locale_info = 'Menunjukkan halaman _PAGE_ dari _PAGES_';
                locale_info = 'Rekod# _START_~_END_ daripada _TOTAL_';
                //locale_search = '';

                locale_infofiltered = '';

                locale_first = 'Pertama';
                locale_previous = 'Sebelumnya';
                locale_next = 'Seterusnya';
                locale_last = 'Terakhir';

            };

            customDatatable = $('#listDatatable').DataTable(
                {
                    //dom: '<"panel panel-default"<"panel-heading"<"row"<"col-md-12">>>t<"panel-footer"<"row pt-2"<"col-md-12">>>>',
                    dom: '<"panel panel-default"<"panel-heading"<"row"<"col-md-12 d-flex justify-content-end text-left">><"row"<"col-md-2"><"col-md-10 d-flex justify-content-end text-right">>>t<"panel-footer"<"row pt-1"<"col-md-4 d-flex justify-content-start text-left">"<"col-md-8 d-flex justify-content-end text-left">>>>',
                    buttons:
                        [
                        ],
                    autoWidth: false,
                    scrollX: true,
                    scrollY: true,
                    pageLength: 31,
                    //responsive: true,
                language: {
                    "lengthMenu": locale_lengthmenu,
                    "zeroRecords": locale_norecord,
                    "info": locale_info,
                    "infoEmpty": locale_norecord,
                    "infoFiltered": locale_infofiltered,
                    "search": locale_search,
                    "paginate": {
                        "first": locale_first,
                        "previous": locale_previous,
                        "next": locale_next,
                        "last": locale_last
                    }
                },
                data: '',
                rowId: 'AttendanceDate',
                    columns: [
                    { "data": "UserName" },
                    { "data": "NRIC" },
                    {
                      "data": "AttendanceDate", "render": function (data) { return convertToDate(data); }
                    },
                    { "data": "AttendanceDay" },
                    { "data": "ShiftID" },
                    {
                        "data": "AttendanceStatusID", function(data) {
                            attendanceStatusID = data;
                            return data;
                        }
                    },
                    { "data": "AttendanceStatus" },
                    {
                        "data": "FirstIn", "render": function (data, type, row) {

                            var attendanceStatusID = row.AttendanceStatusID;

                            if (attendanceStatusID == 'LIN' || attendanceStatusID == 'L/E') {
                                //return '<span style="color:red">' + data + '</span>';

                                if (row.OvertimeExtraStart != null) {

                                    if (data != null) {
                                        return '<span style="color:red">' + data + '</span>' + "<br/>" + row.OvertimeExtraStart;

                                    }
                                    else {
                                        return "<br/>" + row.OvertimeExtraStart;
                                    }
                                }
                                else {
                                    return '<span style="color:red">' + data + '</span>';
                                }

                            }
                            else {

                                if (attendanceStatusID == 'ICP') {

                                    //var today = new Date(Date.now());

                                    //var dd = String(today.getDate());
                                    //var mm = String(today.getMonth() + 1);
                                    //var yyyy = String(today.getFullYear());

                                    //if (convertToDate(row.AttendanceDate) != (dd.padStart(2, '0') + '/' + mm.padStart(2, '0') + '/' + yyyy)) {
                                    //    return '<span style="color:red">' + data + '</span>';
                                    //}
                                    //else {
                                    //    return data;
                                    //}

                                    var today = new Date(Date.now());

                                    var dd = String(today.getDate());
                                    var mm = String(today.getMonth() + 1);
                                    var yyyy = String(today.getFullYear());

                                    if (convertToDate(row.AttendanceDate) != (dd.padStart(2, '0') + '/' + mm.padStart(2, '0') + '/' + yyyy)) {

                                        // Only change to red color after next day

                                        if (row.OvertimeExtraStart != null) {

                                            if (data != null) {
                                                return '<span style="color:red">' + data + '</span>' + "<br/>" + row.OvertimeExtraStart;
                                            }
                                            else {
                                                return "<br/>" + row.OvertimeExtraStart;
                                            }

                                        }
                                        else {
                                            return '<span style="color:red">' + data + '</span>'
                                        }


                                    }
                                    else {

                                        // No need change color

                                        if (row.OvertimeExtraStart != null) {

                                            if (data != null) {
                                                return data + "<br/>" + row.OvertimeExtraStart;
                                            }
                                            else {
                                                return "<br/>" + row.OvertimeExtraStart;
                                            }

                                        }
                                        else {
                                            return data;
                                        }
                                    }


                                }
                                else {

                                    // Status : Normal
                                    if (row.OvertimeExtraStart != null) {

                                        if (data != null) {
                                            return data + "<br/>" + row.OvertimeExtraStart;
                                        }
                                        else {
                                            return "<br/>" + row.OvertimeExtraStart;
                                        }

                                    }
                                    else {
                                        return data;
                                    }

                                }

                            }
                        }
                    },
                    { "data": "Lateness" },
                    {
                        "data": "LastOut", "render": function (data, type, row) {


                            var attendanceStatusID = row.AttendanceStatusID;

                            if (attendanceStatusID == 'EOT' || attendanceStatusID == 'L/E') {

                                if (row.OvertimeExtraEnd != null) {

                                    if (data != null) {
                                        return '<span style="color:red">' + data + '</span>' + "<br/>" + row.OvertimeExtraEnd;

                                    }
                                    else {
                                        return "<br/>" + row.OvertimeExtraEnd;

                                    }
                                }
                                else {
                                    return '<span style="color:red">' + data + '</span>';
                                }

                            }
                            else {

                                if (row.OvertimeExtraEnd != null) {

                                    if (data != null) {

                                        return data + "<br/>" + row.OvertimeExtraEnd;
                                    }
                                    else {

                                        return "<br/>" + row.OvertimeExtraEnd;
                                    }

                                }
                                else {
                                    return data;
                                }
                            }


                        }
                    },
                    {
                        "data": "WorkTime", "render": function (data, type, row) {

                            if (row.OvertimeExtraEnd != null) {
                                if (data != null) {
                                    return data + "<br/>" + row.OvertimeExtra;
                                }
                                else {
                                    return "<br/>" + row.OvertimeExtra;

                                }

                            }
                            else {
                                return data;
                            }
                        }
                    },
                    {
                        "data": "Overtime", "render": function (data, type, row) {
                            if (row.OvertimeExtraEnd != null) {


                                if (data != null) {
                                    return data + "<br/>" + row.OvertimeExtra;
                                }
                                else {
                                    return "<br/>" + row.OvertimeExtra;
                                }

                            }
                            else {
                                return data;
                            }
                        }
                    },
                    {
                        "data": "SubmissionDueDate", "render": function (data) { return convertToDate(data); }
                    },
                    { "data": "ReasonID" },
                    {
                        "render": function (data, type, row, meta) {

                            if (row.IsSubmitted == true) {
                                if (row.Remark == '') {
                                    return row.ReasonName;
                                }
                                else {

                                    return row.ReasonName + "<br/>" + "[ " + row.Remark + " ]";
                                };
                            }

                            return '';

                        }
                    },
                    {
                        "render": function (data, type, row, meta) {

                            if (row.IsSubmitted == true) {


                                if (row.IsApproved == true) {


                                    return "<i class='fa fa-check' style='color: green' data-toggle='tooltip' data-placement='top' title='MyTime.Resource.StatusApproved'/>";
                                }
                                else {
                                    if (row.IsSubmissionDue != true) {

                                        if ( row.IsRejected == true) {

                                            return "<i class='fa fa-times' style='color:red' data-toggle='tooltip' data-placement='top' title='@MyTime.Resource.StatusRejected'/>";
                                        }
                                        else if (row.IsRequestedToAmend == true) {

                                            return "<i class='fa fa-circle' style='color:indigo' data-toggle='tooltip' data-placement='top' title='@MyTime.Resource.StatusRequestedToAmend'/>";
                                        }
                                        else {

                                            return "<i class='fa fa-circle' style='color:orange' data-toggle='tooltip' data-placement='top' title='@MyTime.Resource.StatusSubmitted'/>";
                                        };
                                    }
                                    else {

                                        return "<i class='fa fa-times' style='color:red' data-toggle='tooltip' data-placement='top' title='@MyTime.Resource.StatusRejected'/>";
                                    };
                                };

                            }
                            else {

                                return '';
                            }

                        }
                    },
                    { "data": "AttendanceCardStatus" }
                ],
                    columnDefs: [
                    { targets: 0, className: 'text-left', width: '40px', orderable: true, visible: false },
                    { targets: 1, className: 'text-left', width: '40px', orderable: true, visible: false },
                    { targets: 2, type: 'date-euro', className: 'text-center', width: '50px', orderable: true },
                    { targets: 3, className: 'text-center', width: '40px', orderable: true },
                    { targets: 4, className: 'text-left', width: '40px', orderable: true, visible: false },
                    { targets: 5, className: 'text-left', width: '40px', orderable: true, visible: false},
                    { targets: 6, className: 'text-left', width: '120px', orderable: true },
                    { targets: 7, className: 'text-center', width: '40px', orderable: true },
                    { targets: 8, className: 'text-center', width: '40px', orderable: true, visible: false },
                    { targets: 9, className: 'text-center', width: '40px', orderable: true },
                    { targets: 10, className: 'text-center', width: '50px', orderable: true },
                    { targets: 11, className: 'text-center', width: '40px', orderable: true },
                    { targets: 12, className: 'text-center', width: '40px', orderable: true, visible: false },
                    { targets: 13, className: 'text-center', width: '10px', orderable: true, visible: false },
                    { targets: 14, className: 'text-left', width: '150px', orderable: true },
                    { targets: 15, className: 'text-center', width: '10px', orderable: true },
                    { targets: 16, className: 'text-center', width: '150px', orderable: true, visible: false }
                ],
                order: [[2, 'asc']]
                });


            $('#btnGenerate').click(function () {


                GenerateAttendanceList();

            });

        $('#btnReset').click(function () {

                var attendanceCardStatus = document.getElementById('AttendanceCardStatus');
                attendanceCardStatus.innerHTML = '-';

                var iconAttendanceCardStatus = document.getElementById('iconAttendanceCardStatus');
                iconAttendanceCardStatus.style = 'color: gold ; font-size: 30px; display:none;';

                var totalLateIn = document.getElementById('TotalLateIn');
                totalLateIn.innerHTML = "0";

                var totalEarlyOut = document.getElementById('TotalEarlyOut');
                totalEarlyOut.innerHTML = "0";

                var totalLateInEarlyOut = document.getElementById('TotalLateInEarlyOut');
                totalLateInEarlyOut.innerHTML = "0";

                var totalIncomplete = document.getElementById('TotalIncomplete');
                totalIncomplete.innerHTML = "0";

                var totalAbsent = document.getElementById('TotalAbsent');
                totalAbsent.innerHTML = "0";

                var totalAttend = document.getElementById('TotalAttend');
                totalAttend.innerHTML = "0";

                var totalOnLeave = document.getElementById('TotalOnLeave');
                totalOnLeave.innerHTML = "0";

                customDatatable.clear().draw();

                $('#ddlMonthYear').prop('disabled', false);
                $('#ddlDepartment').prop('disabled', false);
                $('#ddlUser').prop('disabled', false);

                $('#btnGenerate').prop('disabled', false);
                $('#btnReset').prop('disabled', true);
                $('#btnPrint').prop('disabled', true);
            });

    });

        function ValidateCriterion() {

            var ddlMonthYear;
            var selectedMonthYear;

            var ddlDepartment;
            var selectedDepartment;

            $('#btnGenerate').prop('disabled', true);
            $('#btnReset').prop('disabled', true);
            $('#btnPrint').prop('disabled', true);

            ddlMonthYear = document.getElementById('ddlMonthYear');
            selectedMonthYear = ddlMonthYear.value;

            ddlDepartment = document.getElementById('ddlDepartment');
            selectedDepartment = ddlDepartment.value;

            if (selectedMonthYear != '' && selectedDepartment != '') {

                GetDepartmentUser(selectedMonthYear, selectedDepartment);
            }

        };


    function GetDepartmentUser(selectedMonthYear, selectedDepartment) {

        $.ajax({
                    datatype: 'text/plain',
                    type: 'POST',
                    url: 'IndividualAttendanceHistoryReport/GetDepartmentUser',
                    data: {selectedMonthYear : selectedMonthYear, selectedDepartment: selectedDepartment},
                    cache: false,
            success: function (data) {

                    //var ddlUser;
                    //ddlUser = document.getElementById('ddlUser');

                    var ddlUser = $('#ddlUser');

                    ddlUser.empty().append('<option selected="selected" value="">@MyTime.Resource.PleaseSelect</option>');

                    $.each(data, function () {
                        ddlUser.append($("<option></option>").val(this['Value']).html(this['Text']));
                    });
                }
        });
    };

        function GenerateAttendanceList() {

            loadSpinner();

            var startDate = $("#ddlMonthYear option:selected").val();
            var NRIC = $("#ddlUser option:selected").val();

            $.ajax({
                datatype: 'text/plain',
                type: 'GET',
                url: 'IndividualAttendanceHistoryReport/GenerateAttendanceList',
                data: { startDate: startDate, NRIC : NRIC },
                cache: false,
                dataType: "json",
                success: function (data) {

                    unloadSpinner();

                    if (data != null) {
                        customDatatable.clear().rows.add(data).draw(false);
                    }
                    else {
                        customDatatable.clear().draw(false);
                    }

                    var attendanceCardStatus = document.getElementById('AttendanceCardStatus');
                    var data = customDatatable.row(0).data();
                    attendanceCardStatus.innerHTML = data['AttendanceCardStatus'];

                    var iconAttendanceCardStatus = document.getElementById('iconAttendanceCardStatus');


                    switch (data['AttendanceCardStatus']) {
                        case '@MyTime.Resource.Colour_Yellow':
                            iconAttendanceCardStatus.style = 'color: gold ; font-size: 30px; display:block;';
                            break;
                        case '@MyTime.Resource.Colour_Green':
                            iconAttendanceCardStatus.style = 'color: green ; font-size: 30px; display:block;';
                            break;
                        case '@MyTime.Resource.Colour_Red':
                            iconAttendanceCardStatus.style = 'color: red ; font-size: 30px; display:block;';
                            break;
                        default:
                            break;
                    }

                    $('#ddlMonthYear').prop('disabled', true);
                    $('#ddlDepartment').prop('disabled', true);
                    $('#ddlUser').prop('disabled', true);
                    $('#btnGenerate').prop('disabled', true);
                    $('#btnReset').prop('disabled', false);
                    $('#btnPrint').prop('disabled', false);

                    GetAttendanceSummary();

                }
            });
    };

    function GetAttendanceSummary() {

        $.ajax({
            datatype: 'text/plain',
            type: 'GET',
            url: 'IndividualAttendanceHistoryReport/GetAttendanceSummary',
            cache: false,
            dataType: "json",
            success: function (data) {

                var totalLateIn = document.getElementById('TotalLateIn');
                totalLateIn.innerHTML = data.TotalLateIn;

                var totalEarlyOut = document.getElementById('TotalEarlyOut');
                totalEarlyOut.innerHTML = data.TotalEarlyOut;

                var totalLateInEarlyOut = document.getElementById('TotalLateInEarlyOut');
                totalLateInEarlyOut.innerHTML = data.TotalLateInEarlyOut;

                var totalIncomplete = document.getElementById('TotalIncomplete');
                totalIncomplete.innerHTML = data.TotalIncomplete;

                var totalAbsent = document.getElementById('TotalAbsent');
                totalAbsent.innerHTML = data.TotalAbsent;

                var totalAttend = document.getElementById('TotalAttend');
                totalAttend.innerHTML = data.TotalAttend;

                var totalOnLeave = document.getElementById('TotalOnLeave');
                totalOnLeave.innerHTML = data.TotalOnLeave;

            }
        });
    };

</script>
}






