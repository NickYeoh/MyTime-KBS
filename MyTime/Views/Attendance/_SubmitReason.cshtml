@model MyTime.ViewModels.AttendanceReasonViewModel

@{
    ViewBag.Title = MyTime.Resource.AttendanceReasonSubmission;
    Layout = null;
}

<div class="modal-content">
    <div id="divForm" class="d-flex justify-content-center">

        <div class="card shadow" style="width:496px;">
            <div class="card-header bg-transparent">
                <h6> @ViewBag.Title </h6>
            </div>
            <div class="card-body">

                @using (Ajax.BeginForm(null, null, new AjaxOptions
                {
                    InsertionMode = InsertionMode.Replace,
                    AllowCache = false,
                    HttpMethod = "POST",
                    OnSuccess = "onSuccessProcess",
                    UpdateTargetId = "divCRUD",
                    LoadingElementId = "divSpinner",

                },
                new { @id = "formSubmit", enctype = "multipart/form-data" }
                ))
                {
                    @Html.AntiForgeryToken()

                    @Html.HiddenFor(model => model.AttendanceReasonModel.NRIC)
                    @Html.HiddenFor(model => model.AttendanceReasonModel.AttendanceStatusID)
                    @Html.HiddenFor(model => model.AttendanceReasonModel.Lateness)                   
                    @Html.HiddenFor(model => model.AttendanceReasonModel.ReasonName)

                <div class="form-horizontal">

                    @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@

                    <div class="form-group row">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.AttendanceReasonModel.AttendanceDate, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.AttendanceReasonModel.AttendanceDate, new { htmlAttributes = new { @class = "form-control", @Value = Model.AttendanceReasonModel.AttendanceDate.ToString("dd/MM/yyyy"), @readonly = "readonly" } })
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.AttendanceReasonModel.AttendanceDay, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.AttendanceReasonModel.AttendanceDay, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.AttendanceReasonModel.AttendanceStatus, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.AttendanceReasonModel.AttendanceStatus, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.AttendanceReasonModel.FirstIn, htmlAttributes: new { @class = "control-label" })
                        </div>

                        <div class="col-md-3">
                            @Html.EditorFor(model => model.AttendanceReasonModel.FirstIn, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.AttendanceReasonModel.LastOut, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.AttendanceReasonModel.LastOut, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.AttendanceReasonModel.WorkTime, htmlAttributes: new { @class = "control-label" })
                        </div>

                        <div class="col-md-3">
                            @Html.EditorFor(model => model.AttendanceReasonModel.WorkTime, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.AttendanceReasonModel.Overtime, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.AttendanceReasonModel.Overtime, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>

                    <hr />

                    <div class="form-group row text-center">
                        <div class="col-md-12">
                            @MyTime.Resource.WorkOvertime
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.AttendanceReasonModel.OvertimeExtraStart, htmlAttributes: new { @class = "control-label" })
                        </div>

                        <div class="col-md-3">
                            @Html.EditorFor(model => model.AttendanceReasonModel.OvertimeExtraStart, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.AttendanceReasonModel.OvertimeExtraEnd, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.AttendanceReasonModel.OvertimeExtraEnd, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.AttendanceReasonModel.WorkTime, htmlAttributes: new { @class = "control-label" })
                        </div>

                        <div class="col-md-3">
                            @Html.EditorFor(model => model.AttendanceReasonModel.OvertimeExtra, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.AttendanceReasonModel.OvertimeExtra, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.AttendanceReasonModel.OvertimeExtra, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>

                    <hr />



                    <div class="form-group row">
                        @Html.LabelFor(model => model.AttendanceReasonModel.ReasonID, htmlAttributes: new { @class = "control-label col-md-12 required" })

                        <div class="col-md-12">
                            @Html.DropDownListFor(model => model.AttendanceReasonModel.ReasonID, Model.SelectReason as List<SelectListItem>, MyTime.Resource.PleaseSelect, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AttendanceReasonModel.ReasonID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.AttendanceReasonModel.Remark, htmlAttributes: new { @class = "control-label col-md-12" })

                        <div class="col-md-12">
                            @Html.EditorFor(model => model.AttendanceReasonModel.Remark, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                        </div>
                    </div>

                    <div class="form-group row" style="display:block;">
                        @Html.LabelFor(model => model.AttendanceReasonModel.Proof, htmlAttributes: new { @class = "control-label col-md-12" })

                        <div class="col-md-12">
                            @Html.EditorFor(model => model.AttendanceReasonModel.Proof, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", @readonly = "readonly" } })
                        </div>
                    </div>

                    <div class="form-group row" style="display:block;">
                        <div class="col-md-12">
                            @*<input type="file" name="OrganisationLogoFile" id="OrganisationLogoFile" />*@
                            @*, onclick = "$('#errPostedProof').text('');"*@

                            @Html.TextBoxFor(model => model.AttendanceReasonModel.PostedProof, new { type = "file", @id = "postProof" })
                            @Html.ValidationMessageFor(model => model.AttendanceReasonModel.PostedProof, "", new { @class = "error", @id = "errPostedProof", @style = "color:red;" })
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-12 text-right">
                            <input id="btnSubmit" type="submit" value="@MyTime.Resource.Submit" class="btn btn-primary" />
                            <input id="btnCancel" type="button" value="@MyTime.Resource.Cancel" class="btn btn-warning" />
                        </div>
                    </div>

                </div>

                }

            </div>

        </div>

    </div>
</div>