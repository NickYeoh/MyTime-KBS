@model MyTime.Models.AuthModel

@{
    ViewBag.Title = MyTime.Resource.Login;
    Layout = Request.IsAjaxRequest() ? null : "~/Views/Shared/_Auth.cshtml";
    //Layout = "~/Views/Shared/_Auth.cshtml";
}

<div class="container-fluid">

    <div id="divAjaxUpdate" class="row">
        <div class="col-md-9 p-0">
            <div class="image-left-pane d-none d-sm-block">
            </div>
        </div>
        <div class="col-md-3">
            <div class="center-block pt-5" style="width: 280px;">

                <div style="width:240px;">
                    @using (Ajax.BeginForm("Index", "Auth", new AjaxOptions { HttpMethod = "POST", OnSuccess = "onSuccess", UpdateTargetId = "divAjaxUpdate", LoadingElementId = "divSpinner" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="row d-flex align-items-center">
                            <div class="col-4">
                                <img src=@String.Format( "../Images/{0}", Session["OrganisationLogo"]) width="100" height="80"/>                              
                            </div>
                            <div class="col-8 text-center appname-shadow">
                                <h4>MyTime</h4>
                            </div>
                        </div>


                        <hr />

                        <div class="form-group pt-2">
                            <h5>@MyTime.Resource.Login</h5>
                        </div>
                                              
                        <div class="form-group row">

                            @Html.LabelFor(model => model.NRIC, htmlAttributes: new { @class = "col-md-12 control-label required" })
                            
                            <div class="col-md-12">
                                @Html.EditorFor(model => Model.NRIC, new { htmlAttributes = new { @class = "form-control form-control-line" } })
                                @Html.ValidationMessageFor(model => Model.NRIC, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => Model.Password, htmlAttributes: new { @class = "col-md-12 control-label required" })

                            <div class="col-md-12">
                                @Html.EditorFor(model => Model.Password, new { htmlAttributes = new { @class = "form-control form-control-line" } })
                                @Html.ValidationMessageFor(model => Model.Password, "", new { @class = "text-danger" })

                            </div>
                        </div>

                        <div class="form-group row">
                            <div class="col-md-8 d-flex align-items-center">
                                @MyTime.Resource.Language :
                                <span class="pl-2" title="Bahasa Malaysia"> @Ajax.ActionLink(" ", "SwitchLanguage", "Auth", new { lang = "ms-MY" }, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "divAjaxUpdate" }, new { @class = "icon-malaysia" })</span>
                                <span class="pl-1" title="English">@Ajax.ActionLink(" ", "SwitchLanguage", "Auth", new { lang = "en-GB" }, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "divAjaxUpdate" }, new { @class = "pl-2 icon-uk" })</span>

                            </div>
                            <div class="col-md-4 text-right">
                                <input id="btnSubmit" type="submit" value="@MyTime.Resource.Submit" class="btn btn-primary" />
                            </div>
                        </div>

                    }

                </div>
            </div>
        </div>
    </div>


</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery")
    @*@Scripts.Render("~/bundles/custom-js")*@

<script>

        $(document).ready(function () {

            unloadSpinner();

            showDivBody();

        });

        var onSuccess = function (result) {

            switch (result.status) {
                case 1:

                    var url = '@Url.Action("Index","home")';
                    window.location.href = url;
                    break;

                  case 2:

                    var url = '@Url.Action("personalprofile","user")';
                    window.location.href = url;
                    break;

                default:

                     @*var url = '@Url.Action("Index","home")';
                    window.location.href = url;*@
                    break;


            }

        };





</script>

}



