@model MyTime.ViewModels.AttendanceCardReportViewModel

@{
    ViewBag.Title = MyTime.Resource.AttendanceCardReport;

    Layout = "~/Views/Shared/_Layout.cshtml";

}

<div class="container-fluid">

    <div class="row">
        <div class="col">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item active" aria-current="page">@ViewBag.Title</li>
                </ol>
            </nav>
        </div>
    </div>

    <div class="row">

        <div id="divList" class="col-md-12">

            <div class="card shadow">
                <div class="card-header bg-transparent text-center">

                    <div class="form-horizontal">

                        <div class="form-group row text-center">
                            <div class="col-md-12">
                                <h6>@MyTime.Resource.AttendanceCardReport</h6>

                            </div>
                        </div>

                        <hr />

                        <div class="form-group row text-left">
                            <div class="col-md-auto">
                                <div>
                                    @Html.Label(MyTime.Resource.Month, htmlAttributes: new { @class = "control-label required" })
                                </div>

                                <div>
                                    @Html.DropDownList("MonthYear", Model.SelectListMonthYear as List<SelectListItem>, MyTime.Resource.PleaseSelect, htmlAttributes: new { @style = "width:100px;", @class = "form-control", @id = "ddlMonthYear" })
                                </div>
                            </div>

                            <div class="col-md-auto">
                                <div>
                                    @Html.Label(MyTime.Resource.DepartmentName, htmlAttributes: new { @class = "control-label required" })
                                </div>
                                <div class="row D-flex align-items-start pl-3">
                                    <div class="pb-2">
                                        @Html.DropDownList("Department", Model.SelectListDepartment as List<SelectListItem>, MyTime.Resource.PleaseSelect, htmlAttributes: new { @style = "width:300px;", @class = "form-control", @id = "ddlDepartment" })
                                    </div>
                                    <div>
                                        <span class="pl-2"></span>
                                        <input id="btnGenerate" type="button" value="@MyTime.Resource.Generate" class="btn btn-primary text-center" style="min-width:80px;" />
                                        <span class="pl-1"></span>
                                        <input id="btnReset" type="button" value="@MyTime.Resource.Reset" class="btn btn-warning text-center" style="min-width: 80px;" />
                                        <span class="pl-1"></span>
                                        <input id="btnPrint" type="button" value="@MyTime.Resource.Print" class="btn btn-info text-black text-center" style="min-width: 80px;" onclick="location.href='@Url.Action("PrintAttendanceCardReport", "AttendanceCardReport" )'" />
                                    </div>
                                </div>

                            </div>

                        </div>


                        <div class="form-group row text-left">
                            <div class="col-md-auto">
                                <div>
                                    @Html.Label(MyTime.Resource.AttendanceCardStatus, htmlAttributes: new { @class = "control-label required" })
                                    <span class="pl-4"></span>
                                    <input type="radio" class="form-check-input" name="optAttendanceCardStatus" id="optAttendanceCardStatusYellow" value="YL"><i class="icofont-address-book pr-1" style="color: gold ; font-size:18px;" data-toggle="tooltip" data-placement="top" title="@MyTime.Resource.AttendanceCard"></i>@MyTime.Resource.Colour_Yellow
                                    <span class="pl-4"></span>
                                    <input type="radio" class="form-check-input" name="optAttendanceCardStatus" id="optAttendanceCardStatusGreen" value="GN"><i class="icofont-address-book pr-1" style="color: green ; font-size:18px;" data-toggle="tooltip" data-placement="top" title="@MyTime.Resource.AttendanceCard"></i>@MyTime.Resource.Colour_Green
                                    <span class="pl-4"></span>
                                    <input type="radio" class="form-check-input" name="optAttendanceCardStatus" id="optAttendanceCardStatusRed" value="RD" checked="checked"><i class="icofont-address-book pr-1" style="color: red ; font-size:18px;" data-toggle="tooltip" data-placement="top" title="@MyTime.Resource.AttendanceCard"></i>@MyTime.Resource.Colour_Red

                                </div>                               
                              
                            </div>                         

                        </div>

                    </div>

                    <hr />

                    <div class="card-body pt-0">

                        <table id="listDatatable" class="table table-striped hover" style="table-layout: fixed;">
                            <thead>

                                <tr class="text-white header-bg-color">
                                    <th>@MyTime.Resource.YearMonth</th>
                                    <th>@MyTime.Resource.DepartmentName</th>
                                    <th>@MyTime.Resource.UserName</th>
                                    <th>@MyTime.Resource.NRIC</th>
                                    <th>@MyTime.Resource.AttendanceCardStatus</th>
                                    <th>@MyTime.Resource.LateInCount</th>
                                    <th>@MyTime.Resource.EarlyOutCount</th>
                                    <th>@MyTime.Resource.LateInEarlyOutCount</th>
                                    <th>@MyTime.Resource.IncompleteCount</th>
                                    <th>@MyTime.Resource.AbsentCount</th>
                                    <th>@MyTime.Resource.AttendCount</th>
                                    <th>@MyTime.Resource.OnLeaveCount</th>
                                    <th>@MyTime.Resource.TotalAttendanceIssue</th>


                                </tr>
                            </thead>
                        </table>

                    </div>
                </div>
            </div>

        </div>

         <div class="modal fade" id="modalCRUD" role="dialog" data-backdrop="static" keyboard="false">
            <div class="modal-dialog">
                <div id="divCRUD">
                </div>
            </div>
        </div>

    </div>

    <input type=hidden id="pid" value="" />
</div>

@section styles
                                    {
    @Styles.Render("~/Content/dataTables")
    <link rel="stylesheet" href="~/Content/themes/base/jquery-ui.min.css">
}

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    @Scripts.Render("~/bundles/dataTables")
    <script src="~/Scripts/moment.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    @*@Scripts.Render("~/bundles/custom-js")*@

    <script type="text/javascript">


        <!--var customDatatable;
        var dataList;

        function convertToDate(data) {

                var dte = new Date(parseInt(data.substr(6)));
                var dteWrapper = moment(dte);
                return dteWrapper.format("DD/MM/YYYY");
        };

    $(document).ready(function () {

            setInactivityTime();

            //toggleSidebar();
            unloadSpinner();
            showDivBody();

            $('#btnGenerate').prop('disabled', true);
            $('#btnReset').prop('disabled', true);
            $('#btnPrint').prop('disabled', true);

            $('#ddlMonthYear').change(function () {
                ValidateCriterion();
            });

            $('#ddlDepartment').change(function () {
                ValidateCriterion();
            });

         
            var culture = '@System.Globalization.CultureInfo.CurrentCulture.Name';

            var locale_norecord = '';
            var locale_lengthmenu = '';
            var locale_info = '';
            var locale_search = '';
            var locale_first = '';
            var locale_previous = '';
            var locale_next = '';
            var locale_last = '';
            var locale_infofiltered = '';

            if (culture != 'ms-MY') {
                //locale_norecord = '- No record -';
                locale_norecord = '-';
                locale_lengthmenu = 'Display _MENU_';
                //locale_info = 'Showing page _PAGE_ of _PAGES_';
                locale_info = 'Record# _START_~_END_  of _TOTAL_';
                locale_search = '';

                locale_infofiltered = '';

                locale_first = 'First';
                locale_previous = 'Previous';
                locale_next = 'Next';
                locale_last = 'Last';
            }
            else {
                //locale_norecord = '- Tidak ada rekod -';
                locale_norecord = '-';
                locale_lengthmenu = 'Paparan _MENU_ ';
                //locale_info = 'Menunjukkan halaman _PAGE_ dari _PAGES_';
                locale_info = 'Rekod# _START_~_END_ daripada _TOTAL_';
                //locale_search = '';

                locale_infofiltered = '';

                locale_first = 'Pertama';
                locale_previous = 'Sebelumnya';
                locale_next = 'Seterusnya';
                locale_last = 'Terakhir';

            };

            //var dataList;

            //dom: '<"panel panel-default"<"panel-heading"<"row"<"col-md-12"f>>>t<"panel-footer"<"row pt-2"<"col-md-6"l><"col-md-6 text-right"p>>>>',

            customDatatable = $('#listDatatable').DataTable(
                {
                    dom: '<"panel panel-default"<"panel-heading"<"row"<"col-md-12 d-flex justify-content-end text-left"f>><"row"<"col-md-2"B><"col-md-10 d-flex justify-content-end text-right"i>>>t<"panel-footer"<"row pt-1"<"col-md-4 d-flex justify-content-start text-left"l>"<"col-md-8 d-flex justify-content-end text-left"p>>>>',
                    buttons:
                        [
                        ],
                    autoWidth: false,
                    scrollX: true,
                    scrollY: true,
                    pageLength: 31,
                    //responsive: true,
                    language: {
                        "lengthMenu": locale_lengthmenu,
                        "zeroRecords": locale_norecord,
                        "info": locale_info,
                        "infoEmpty": locale_norecord,
                        "infoFiltered": locale_infofiltered,
                        "search": locale_search,
                        "paginate": {
                            "first": locale_first,
                            "previous": locale_previous,
                            "next": locale_next,
                            "last": locale_last
                        }
                    },
                    data: '',
                    rowId: 'AttendanceMonth',
                    columns: [
                        { "data": "AttendanceMonth" },
                        { "data": "DepartmentName" },
                        { "data": "UserName" },
                        { "data": "NRIC" },
                        { "data": "AttendanceCardStatus" },                      
                        { "data": "LateInCount" },
                        { "data": "EarlyOutCount" },
                        { "data": "LateInEarlyOutCount" },
                        { "data": "IncompleteCount" },
                        { "data": "AbsentCount" },
                        { "data": "AttendCount" },
                        { "data": "OnLeaveCount" },
                        { "data": "TotalAttendanceIssue" }
                                    
                     
                ],
                    columnDefs: [                          
                    { targets: 0, className: 'text-center', width: '40px', orderable: true, visible: false},
                    { targets: 1, className: 'text-left', width: '350px', orderable: true, visible: false  },
                    { targets: 2, className: 'text-left', width: '250px', orderable: true },
                    { targets: 3, className: 'text-center', width: '150px', orderable: true },
                    { targets: 4, className: 'text-left', width: '150px', orderable: true, visible: false },                  
                    { targets: 5, className: 'text-center', width: '80px', orderable: true },
                    { targets: 6, className: 'text-center', width: '80px', orderable: true},
                    { targets: 7, className: 'text-center', width: '80px', orderable: true },
                    { targets: 8, className: 'text-center', width: '80px', orderable: true },
                    { targets: 9, className: 'text-center', width: '80px', orderable: true },
                    { targets: 10, className: 'text-center', width: '80px', orderable: true, visible: false  },
                    { targets: 11, className: 'text-center', width: '80px', orderable: true, visible: false },
                    { targets: 12, className: 'text-center', width: '80px', orderable: true }              
                   
                ],
                order: [[1, 'asc'], [2, 'asc']]
            });

            $('#btnGenerate').click(function () {

                GenerateAttendanceCardList();

            });

        $('#btnReset').click(function () {                      


                customDatatable.clear().draw();

                $('#ddlMonthYear').prop('disabled', false);
                $('#ddlDepartment').prop('disabled', false);

                document.getElementById("optAttendanceCardStatusYellow").disabled = false;
                document.getElementById("optAttendanceCardStatusGreen").disabled = false;
                document.getElementById("optAttendanceCardStatusRed").disabled = false;

                $('#btnGenerate').prop('disabled', false);
                $('#btnReset').prop('disabled', true);
                $('#btnPrint').prop('disabled', true);
            });

    });

    function GenerateAttendanceCardList() {


        var ddlMonthYear;
        var selectedMonthYear;

        var ddlDepartment;
        var selectedDepartmentID;

        var selectedAttendanceCardStatus;

        loadSpinner();

        ddlMonthYear = document.getElementById('ddlMonthYear');
        selectedMonthYear = ddlMonthYear.value;
                             
        ddlDepartment = document.getElementById('ddlDepartment');
        selectedDepartmentID = ddlDepartment.value;

        selectedAttendanceCardStatus = $("input[type='radio'][name='optAttendanceCardStatus']:checked").val();
       
        $.ajax({
            datatype: 'text/plain',
            type: 'POST',
            url: 'AttendanceCardReport/GenerateAttendanceCardList',
            data: { selectedMonthYear: selectedMonthYear, selectedDepartmentID: selectedDepartmentID, selectedAttendanceCardStatus: selectedAttendanceCardStatus },
            cache: false,
            success: function (data) {

                if (data != '') {

                    customDatatable.clear().rows.add(data).draw(false);

                }
                else {
                    customDatatable.clear().draw(false);
                }

                $('#ddlMonthYear').prop('disabled', true);
                $('#ddlDepartment').prop('disabled', true);
            
                document.getElementById("optAttendanceCardStatusYellow").disabled = true;
                document.getElementById("optAttendanceCardStatusGreen").disabled = true;
                document.getElementById("optAttendanceCardStatusRed").disabled = true;

                $('#btnGenerate').prop('disabled', true);
                $('#btnReset').prop('disabled', false);
                $('#btnPrint').prop('disabled', false);

            }
        });

        unloadSpinner();


    };

    function ValidateCriterion() {

         var ddlMonthYear;
         var selectedMonthYear;

         var ddlDepartment;
         var selectedDepartment;

         ddlMonthYear = document.getElementById('ddlMonthYear');
         selectedMonthYear = ddlMonthYear.value;

         ddlDepartment = document.getElementById('ddlDepartment');
         selectedDepartment = ddlDepartment.value

         if (selectedMonthYear != '' && selectedDepartment != '') {

             $('#btnGenerate').prop('disabled', false);
             $('#btnReset').prop('disabled', true);
             $('#btnPrint').prop('disabled', true);

         }
         else {

             $('#btnGenerate').prop('disabled', true);
             $('#btnReset').prop('disabled', true);
             $('#btnPrint').prop('disabled', true);
         }

    };

   

       let setInactivityTime = function () {

                let time;
                window.onload = resetTimer;

                document.onmousemove = resetTimer;
                document.onkeypress = resetTimer;
                document.onclick = resetTimer;

                function logout() {

                        var messageString = '@String.Format(MyTime.Resource.MessageSessionExpired, Session.Timeout)'

                      bootbox.alert({
                            title: '@MyTime.Resource.MessageInfo',
                            message: messageString,

                            backdrop: true,
                            buttons: {
                                        ok: {
                                          className:'btn-primary',
                                          label: ' @MyTime.Resource.Close'
                                }
                            },
                          callback: function () {
                            var url = '@Url.Action("Index","Auth")';
                            window.location.href = url;
                            }
                        });


                }
                function resetTimer() {

                    let timeOut = parseInt('@Session.Timeout');

                    clearTimeout(time);
                    time = setTimeout(logout, timeOut * 60 * 1000)
                }
            };


    </script>
}





