@model  MyTime.ViewModels.AttendanceSummaryReportViewModel

@{
    ViewBag.Title = MyTime.Resource.AttendanceSummaryReport;

    Layout = "~/Views/Shared/_Layout.cshtml";

}

<div class="container-fluid">

    <div class="row">
        <div class="col">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item" aria-current="page">@MyTime.Resource.Report</li>
                    <li class="breadcrumb-item active" aria-current="page">@ViewBag.Title</li>
                </ol>
            </nav>
        </div>
    </div>

    <div class="row">

        <div id="divList" class="col-md-12">

            <div class="card shadow">
                <div class="card-header bg-transparent text-center">

                    <div class="form-horizontal">

                        <div class="form-group row text-center">
                            <div class="col-md-12">
                                <h5>@ViewBag.Title</h5>
                            </div>
                        </div>

                        <hr />

                        <div class="form-group row text-left">
                            <div class="col-md-auto">
                                <div>
                                    @Html.Label(MyTime.Resource.Year, htmlAttributes: new { @class = "control-label required" })
                                </div>

                                <div>
                                    @Html.DropDownList("Year", Model.SelectListYear as List<SelectListItem>, MyTime.Resource.PleaseSelect, htmlAttributes: new { @style = "width:100px;", @class = "form-control", @id = "ddlYear" })
                                </div>
                            </div>

                            <div class="col-md-auto">
                                <div>
                                    @Html.Label(MyTime.Resource.Month, htmlAttributes: new { @class = "control-label" })
                                </div>

                                <div>
                                    <select id="ddlMonth" class="form-control" style="width: 100px;"></select>
                                </div>
                            </div>

                        </div>


                        <div class="form-group row text-left">

                            <div class="col-md-auto">
                                <div>
                                    @Html.Label(MyTime.Resource.DepartmentName, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="row D-flex align-items-start pl-3">
                                    <div class="pb-2">
                                        @Html.DropDownList("Department", Model.SelectListDepartment as List<SelectListItem>, MyTime.Resource.PleaseSelect, htmlAttributes: new { @style = "width:300px;", @class = "form-control", @id = "ddlDepartment" })
                                    </div>
                                    <div>
                                        <span class="pl-2"></span>
                                        <input id="btnGenerate" type="button" value="@MyTime.Resource.Generate" class="btn btn-primary text-center" style="min-width:80px;" />
                                        <span class="pl-1"></span>
                                        <input id="btnReset" type="button" value="@MyTime.Resource.Reset" class="btn btn-warning text-center" style="min-width: 80px;" />
                                        <span class="pl-1"></span>
                                        <input id="btnPrint" type="button" value="@MyTime.Resource.Print" class="btn btn-info text-black text-center" style="min-width: 80px;" onclick="location.href='@Url.Action("PrintAttendanceSummaryReport", "AttendanceSummaryReport" )'" />
                                    </div>
                                </div>
                            </div>

                        </div>

                        <div class="form-group pt-2 row">
                            <div class="col-12 d-flex justify-content-end">
                                @Html.Label(MyTime.Resource.TotalLateIn, htmlAttributes: new { @class = "control-label pr-1" })
                                <span class="badge badge-secondary" style="font-size:12pt;"> @Html.Label("0", htmlAttributes: new { @class = "control-label p-0 text-center", @id = "TotalLateIn" }) </span>

                                @Html.Label(MyTime.Resource.TotalEarlyOut, htmlAttributes: new { @class = "control-label pl-2 pr-1" })
                                <span class="badge badge-secondary" style="font-size:12pt;"> @Html.Label("0", htmlAttributes: new { @class = "control-label p-0", @id = "TotalEarlyOut" }) </span>

                                @Html.Label(MyTime.Resource.TotalLateInEarlyOut, htmlAttributes: new { @class = "control-label pl-2 pr-1" })
                                <span class="badge badge-secondary" style="font-size:12pt;"> @Html.Label("0", htmlAttributes: new { @class = "control-label p-0", @id = "TotalLateInEarlyOut" }) </span>

                                @Html.Label(MyTime.Resource.TotalIncomplete, htmlAttributes: new { @class = "control-label pl-2 pr-1" })
                                <span class="badge badge-secondary" style="font-size:12pt;"> @Html.Label("0", htmlAttributes: new { @class = "control-label p-0", @id = "TotalIncomplete" }) </span>

                                @Html.Label(MyTime.Resource.TotalAbsent, htmlAttributes: new { @class = "control-label pl-2 pr-1" })
                                <span class="badge badge-secondary" style="font-size:12pt;"> @Html.Label("0", htmlAttributes: new { @class = "control-label p-0", @id = "TotalAbsent" }) </span>

                            </div>
                        </div>

                        <div class="form-group row">
                            <div class="col-md-12 d-flex justify-content-end">

                                @Html.Label(MyTime.Resource.TotalAttend, htmlAttributes: new { @class = "control-label pl-2 pr-1" })
                                <span class="badge badge-secondary" style="font-size:12pt;"> @Html.Label("0", htmlAttributes: new { @class = "control-label p-0", @id = "TotalAttend" }) </span>

                                @Html.Label(MyTime.Resource.TotalOnLeave, htmlAttributes: new { @class = "control-label pl-2 pr-1" })
                                <span class="badge badge-secondary" style="font-size:12pt;"> @Html.Label("0", htmlAttributes: new { @class = "control-label p-0", @id = "TotalOnLeave" }) </span>
                            </div>
                        </div>

                        <div class="form-group row">

                            <div class="col-md-12 d-flex justify-content-end">

                                <span class="fa fa-circle pl-2 pr-1" style="color:orange"> @MyTime.Resource.StatusSubmitted </span>
                                <span class="fa fa-check pl-2 pr-1" style="color:green"> @MyTime.Resource.StatusApproved </span>
                                <span class="fa fa-times pl-2 pr-1" style="color:red"> @MyTime.Resource.StatusRejected </span>
                                <span class="fa fa-circle pl-2 pr-1" style="color:indigo"> @MyTime.Resource.StatusRequestedToAmend </span>
                            </div>
                        </div>

                    </div>

                    <hr />

                    <div class="card-body pt-0">

                        <table id="listDatatable" class="table table-striped hover" style="table-layout: fixed;">
                            <thead>

                                <tr class="text-white header-bg-color">

                                    <th>@MyTime.Resource.DepartmentName</th>
                                    <th>@MyTime.Resource.UserCount</th>
                                    <th>@MyTime.Resource.LateIn</th>
                                    <th>@MyTime.Resource.EarlyOut</th>
                                    <th>@MyTime.Resource.LateInEarlyOut</th>
                                    <th>@MyTime.Resource.Incomplete</th>                                   
                                    <th>@MyTime.Resource.Absent</th>
                                    <th>@MyTime.Resource.Attend</th>
                                    <th>@MyTime.Resource.OnLeave</th>
                                    
                                </tr>
                            </thead>
                        </table>

                    </div>
                </div>
            </div>

        </div>

        <div id="divCRUD" class="col-md-6 hide">
        </div>


        <div class="modal fade" id="modalCRUD" role="dialog" data-backdrop="static" keyboard="false">
            <div class="modal-dialog">
                <div id="divCRUD">
                </div>
            </div>
        </div>

    </div>

    <input type=hidden id="pid" value="" />
</div>

@section styles
                                    {
    @Styles.Render("~/Content/dataTables")
    <link rel="stylesheet" href="~/Content/themes/base/jquery-ui.min.css">
}

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    @Scripts.Render("~/bundles/dataTables")
    <script src="~/Scripts/moment.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    @*@Scripts.Render("~/bundles/custom-js")*@

<script type="text/javascript">


        var customDatatable;
        var dataList;

        function convertToDate(data) {

                var dte = new Date(parseInt(data.substr(6)));
                var dteWrapper = moment(dte);
                return dteWrapper.format("DD/MM/YYYY");
        };

    $(document).ready(function () {

            setInactivityTime();

            //toggleSidebar();
            unloadSpinner();
            showDivBody();

            @*var culture = '@System.Globalization.CultureInfo.CurrentCulture.Name';
            $('.datepicker').datepicker(setDateTimePickerLocale(culture));*@

            var ddlMonth = $('#ddlMonth');

            ddlMonth.empty().append('<option selected="selected" value="">@MyTime.Resource.PleaseSelect</option>');

            $('#btnGenerate').prop('disabled', true);
            $('#btnReset').prop('disabled', true);
            $('#btnPrint').prop('disabled', true);

            $('#ddlYear').change(function () {

                var ddlMonth = $('#ddlMonth');
                var ddlDepartment = $('#ddlDepartment');

                var selectedYear;

                ddlMonth.empty().append('<option selected="selected" value="">@MyTime.Resource.PleaseSelect</option>');

                selectedYear = this.value;

                if (selectedYear != '') {
                    GetMonth(selectedYear);
                }

                ValidateCriterion();

            });

            $('#ddlMonth').change(function () {

                var ddlMonth;
                var selectedMonth;

                ddlMonth = document.getElementById('ddlMonth');
                selectedMonth = ddlMonth.value;

            });

            $('#ddlDepartment').change(function () {

                var ddlYear = document.getElementById('ddlYear');
                var ddlMonth = document.getElementById('ddlMonth');

                ValidateCriterion();
            });


            var culture = '@System.Globalization.CultureInfo.CurrentCulture.Name';

            var locale_norecord = '';
            var locale_lengthmenu = '';
            var locale_info = '';
            var locale_search = '';
            var locale_first = '';
            var locale_previous = '';
            var locale_next = '';
            var locale_last = '';
            var locale_infofiltered = '';

            if (culture != 'ms-MY') {
                //locale_norecord = '- No record -';
                locale_norecord = '-';
                locale_lengthmenu = 'Display _MENU_';
                //locale_info = 'Showing page _PAGE_ of _PAGES_';
                locale_info = 'Record# _START_~_END_  of _TOTAL_';
                locale_search = '';

                locale_infofiltered = '';

                locale_first = 'First';
                locale_previous = 'Previous';
                locale_next = 'Next';
                locale_last = 'Last';
            }
            else {
                //locale_norecord = '- Tidak ada rekod -';
                locale_norecord = '-';
                locale_lengthmenu = 'Paparan _MENU_ ';
                //locale_info = 'Menunjukkan halaman _PAGE_ dari _PAGES_';
                locale_info = 'Rekod# _START_~_END_ daripada _TOTAL_';
                //locale_search = '';

                locale_infofiltered = '';

                locale_first = 'Pertama';
                locale_previous = 'Sebelumnya';
                locale_next = 'Seterusnya';
                locale_last = 'Terakhir';

            };

        customDatatable = $('#listDatatable').DataTable(
                {
                //dom: '<"panel panel-default"<"panel-heading"<"row"<"col-md-12"f>><"row"<"col-md-2"B><"col-md-10 text-right"i>>>t<"panel-footer"<"row pt-2"<"col-md-6 text-left"l><"col-md-6 text-right"p>>>>',
                dom: '<"panel panel-default"<"panel-heading"<"row"<"col-md-12 d-flex justify-content-end text-left"f>><"row"<"col-md-2"B><"col-md-10 d-flex justify-content-end text-right"i>>>t<"panel-footer"<"row pt-1"<"col-md-4 d-flex justify-content-start text-left"l>"<"col-md-8 d-flex justify-content-end text-left"p>>>>',
                buttons:
                        [
                        ],
                    autoWidth: false,
                    scrollX: true,
                    scrollY: true,
                    //pageLength: 30,
                    //responsive: true,
                language: {
                    "lengthMenu": locale_lengthmenu,
                    "zeroRecords": locale_norecord,
                    "info": locale_info,
                    "infoEmpty": locale_norecord,
                    "infoFiltered": locale_infofiltered,
                    "search": locale_search,
                    "paginate": {
                        "first": locale_first,
                        "previous": locale_previous,
                        "next": locale_next,
                        "last": locale_last
                    }
                },
                data: '',
                rowId: 'DepartmentName',
                    columns: [
                    { "data": "DepartmentName" },
                    { "data": "UserCount" },
                    { "data": "TotalLateIn" },
                    { "data": "TotalEarlyOut" },
                    { "data": "TotalLateInEarlyOut" },
                    { "data": "TotalIncomplete" },
                    { "data": "TotalAbsent" },
                    { "data": "TotalAttend" },
                    { "data": "TotalOnLeave" }
                ],
                    columnDefs: [
                    { targets: 0, className: 'text-left', width: '250px', orderable: true },
                    { targets: 1, className: 'text-center', width: '100px', orderable: true },
                    { targets: 2, className: 'text-center', width: '60px', orderable: true },
                    { targets: 3, className: 'text-center', width: '60px', orderable: true },
                    { targets: 4, className: 'text-center', width: '80px', orderable: true },
                    { targets: 5, className: 'text-center', width: '60px', orderable: true },
                    { targets: 6, className: 'text-center', width: '60px', orderable: true },
                    { targets: 7, className: 'text-center', width: '60px', orderable: true },
                    { targets: 8, className: 'text-center', width: '60px', orderable: true }
                ],
                order: [[0, 'asc']]
            });

            $('#btnGenerate').click(function () {

                GenerateAttendanceList();

            });

            $('#btnReset').click(function () {


                var totalLateIn = document.getElementById('TotalLateIn');
                totalLateIn.innerHTML = "0";

                var totalEarlyOut = document.getElementById('TotalEarlyOut');
                totalEarlyOut.innerHTML = "0";

                var totalLateInEarlyOut = document.getElementById('TotalLateInEarlyOut');
                totalLateInEarlyOut.innerHTML = "0";

                var totalIncomplete = document.getElementById('TotalIncomplete');
                totalIncomplete.innerHTML = "0";

                var totalAbsent = document.getElementById('TotalAbsent');
                totalAbsent.innerHTML = "0";

                var totalAttend = document.getElementById('TotalAttend');
                totalAttend.innerHTML = "0";

                var totalOnLeave = document.getElementById('TotalOnLeave');
                totalOnLeave.innerHTML = "0";

                customDatatable.clear().draw();

                $('#ddlYear').prop('disabled', false);
                $('#ddlMonth').prop('disabled', false);
                $('#ddWeek').prop('disabled', false);
                $('#ddlDepartment').prop('disabled', false);

                $('#btnGenerate').prop('disabled', false);
                $('#btnReset').prop('disabled', true);
                $('#btnPrint').prop('disabled', true);
            });

    });

        function GenerateAttendanceList() {

            loadSpinner();

            var reportType;

            var ddlYear = document.getElementById('ddlYear');
            var ddlMonth = document.getElementById('ddlMonth');

            var ddlDepartment = document.getElementById('ddlDepartment');

            var selectedYear = ddlYear.value;
            var selectedMonth = ddlMonth.value;

            var selectedDepartmentID = ddlDepartment.value;


            if (selectedMonth != '') {
                reportType = "Monthly";
                selectedDate = selectedMonth;
            }
            else {
                reportType = "Yearly";
                selectedDate = selectedYear;
            }

            $.ajax({
                datatype: 'text/plain',
                type: 'GET',
                url: 'AttendanceSummaryReport/GenerateAttendanceList',
                data: { reportType : reportType, selectedDate: selectedDate, selectedDepartmentID: selectedDepartmentID},
                cache: false,
                dataType: "json",
                success: function (data) {

                    unloadSpinner();

                    if (data != null) {
                        customDatatable.clear().rows.add(data).draw(false);
                    }
                    else {
                        customDatatable.clear().draw(false);
                    }


                    $('#ddlYear').prop('disabled', true);
                    $('#ddlMonth').prop('disabled', true);
                    $('#ddlDepartment').prop('disabled', true);

                    $('#btnGenerate').prop('disabled', true);
                    $('#btnReset').prop('disabled', false);
                    $('#btnPrint').prop('disabled', false);

                    GetAttendanceSummary();

                }
            });
        };

        function ValidateCriterion() {

                var ddlYear;
                var selectedYear;

                var ddlDepartment;
                var selectedDepartment;

                ddlYear = document.getElementById('ddlYear');
                selectedYear = ddlYear.value;


                if (selectedYear != '' ) {
                    $('#btnGenerate').prop('disabled', false);
                    $('#btnReset').prop('disabled', true);
                    $('#btnPrint').prop('disabled', true);
                }
                else {
                    $('#btnGenerate').prop('disabled', true);
                    $('#btnReset').prop('disabled', true);
                    $('#btnPrint').prop('disabled', true);
                }
        };


        function GetMonth(selectedYear) {

        $.ajax({
                    datatype: 'text/plain',
                    type: 'POST',
                    url: 'AttendanceSummaryReport/GetMonth',
                    data: {selectedYear : selectedYear},
                    cache: false,
            success: function (data) {

                    var ddlMonth = $('#ddlMonth');

                    ddlMonth.empty().append('<option selected="selected" value="">@MyTime.Resource.PleaseSelect</option>');

                    $.each(data, function () {
                        ddlMonth.append($("<option></option>").val(this['Value']).html(this['Text']));
                    });
                }
        });

    }


    function GetAttendanceSummary() {

        $.ajax({
            datatype: 'text/plain',
            type: 'GET',
            url: 'AttendanceSummaryReport/GetAttendanceSummary',
            cache: false,
            dataType: "json",
            success: function (data) {

                var totalLateIn = document.getElementById('TotalLateIn');
                totalLateIn.innerHTML = data.TotalLateIn;

                var totalEarlyOut = document.getElementById('TotalEarlyOut');
                totalEarlyOut.innerHTML = data.TotalEarlyOut;

                var totalLateInEarlyOut = document.getElementById('TotalLateInEarlyOut');
                totalLateInEarlyOut.innerHTML = data.TotalLateInEarlyOut;

                var totalIncomplete = document.getElementById('TotalIncomplete');
                totalIncomplete.innerHTML = data.TotalIncomplete;

                var totalAbsent = document.getElementById('TotalAbsent');
                totalAbsent.innerHTML = data.TotalAbsent;

                var totalAttend = document.getElementById('TotalAttend');
                totalAttend.innerHTML = data.TotalAttend;

                var totalOnLeave = document.getElementById('TotalOnLeave');
                totalOnLeave.innerHTML = data.TotalOnLeave;

            }
        });
        };

           let setInactivityTime = function () {

                let time;
                window.onload = resetTimer;

                document.onmousemove = resetTimer;
                document.onkeypress = resetTimer;
                document.onclick = resetTimer;

                function logout() {

                        var messageString = '@String.Format(MyTime.Resource.MessageSessionExpired, Session.Timeout)'

                      bootbox.alert({
                            title: '@MyTime.Resource.MessageInfo',
                            message: messageString,

                            backdrop: true,
                            buttons: {
                                        ok: {
                                          className:'btn-primary',
                                          label: ' @MyTime.Resource.Close'
                                }
                            },
                          callback: function () {
                            var url = '@Url.Action("Index","Auth")';
                            window.location.href = url;
                            }
                        });


                }
                function resetTimer() {

                    let timeOut = parseInt('@Session.Timeout');

                    clearTimeout(time);
                    time = setTimeout(logout, timeOut * 60 * 1000)
                }
            };


</script>
}








